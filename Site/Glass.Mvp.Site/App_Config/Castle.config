<castle>
  <components>
    <!-- view resolution -->
    <component id="viewResolver.Pipeline"  type="Glass.Mvp.Pipelines.ViewResolver.ViewResolverPipeline, Glass.Mvp">
      <parameters>
        <tasks>
          <array>
            <item>${viewResolver.Task.ByUrlExtension}</item>
            <item>${viewResolver.Task.ByExtension}</item>
          </array>
        </tasks>
      </parameters>
    </component>
    <component id="viewResolver.Task.ByUrlExtension" type="Glass.Mvp.Pipelines.ViewResolver.Tasks.ResolveViewByUrlExtensionTask, Glass.Mvp" />
    <component id="viewResolver.Task.ByExtension" type="Glass.Mvp.Pipelines.ViewResolver.Tasks.ResolveViewByExtensionsTask, Glass.Mvp" />
    
    <!-- support views-->
    <component id="view.razor" type="Glass.Mvp.Views.RazorView, Glass.Mvp" service="Glass.Mvp.Views.AbstractView, Glass.Mvp" />
    <component id="view.js" type="Glass.Mvp.Views.JsView, Glass.Mvp" service="Glass.Mvp.Views.AbstractView, Glass.Mvp" />
    <component id="view.xml" type="Glass.Mvp.Views.XmlView, Glass.Mvp" service="Glass.Mvp.Views.AbstractView, Glass.Mvp" />
    
    
    <!-- presenter resolution -->
    <component id="presenterResolver.Pipeline"  type="Glass.Mvp.Pipelines.PresenterResolver.PresenterResolverPipeline, Glass.Mvp">
      <parameters>
        <tasks>
          <array>
            <item>${presenterResolver.Task.Standard}</item>
          </array>
        </tasks>
      </parameters>
    </component>
    <component id="presenterResolver.Task.Standard" type="Glass.Mvp.Pipelines.PresenterResolver.Tasks.PresenterResolverStandard, Glass.Mvp" />
    
  </components>
</castle>